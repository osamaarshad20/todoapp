{"ast":null,"code":"var _jsxFileName = \"/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PageHeader from './components/PageHeader';\nimport AddForm from './components/AddForm';\nimport TodoList from './components/TodoList';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\nimport TodoPage from './components/TodoPage';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [authorized, setAuthorized] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  useEffect(() => {\n    filteredTodosHandler();\n  }, [status, todos]);\n\n  const filteredTodosHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.complete === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.complete === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: () => /*#__PURE__*/React.createElement(LoginForm, {\n      setAuthorized: setAuthorized,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/todo\",\n    exact: true,\n    component: () => /*#__PURE__*/React.createElement(TodoPage, {\n      setInputText: setInputText,\n      inputText: inputText,\n      todos: todos,\n      setTodos: setTodos,\n      todos: todos,\n      setTodos: setTodos,\n      filteredTodos: filteredTodos,\n      setStatus: setStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/App.js"],"names":["React","useState","useEffect","PageHeader","AddForm","TodoList","LoginForm","Dashboard","TodoPage","BrowserRouter","Router","Route","Switch","App","inputText","setInputText","status","setStatus","authorized","setAuthorized","todos","setTodos","filteredTodos","setFilteredTodos","filteredTodosHandler","filter","todo","complete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;;AAGA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACXsB,IAAAA,oBAAoB;AACvB,GAFQ,EAEP,CAACR,MAAD,EAASI,KAAT,CAFO,CAAT;;AAIA,QAAMI,oBAAoB,GAAG,MAAM;AAC/B,YAAOR,MAAP;AACA,WAAK,WAAL;AACIO,QAAAA,gBAAgB,CAACH,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,IAAzC,CAAD,CAAhB;AACA;;AACJ,WAAK,aAAL;AACIJ,QAAAA,gBAAgB,CAACH,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,KAAzC,CAAD,CAAhB;AACA;;AACJ;AACIJ,QAAAA,gBAAgB,CAACH,KAAD,CAAhB;AACA;AATJ;AAYH,GAbD;;AAcA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,eAIA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,eAKA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAE,mBAAO,oBAAC,SAAD;AAAW,MAAA,aAAa,EAAED,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,eAMA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,MAAzB;AAA0B,IAAA,SAAS,EAAE,mBAAO,oBAAC,QAAD;AAC5C,MAAA,YAAY,EAAIJ,YAD4B;AAE5C,MAAA,SAAS,EAAID,SAF+B;AAG5C,MAAA,KAAK,EAAIM,KAHmC;AAI5C,MAAA,QAAQ,EAAIC,QAJgC;AAK5C,MAAA,KAAK,EAAID,KALmC;AAM5C,MAAA,QAAQ,EAAIC,QANgC;AAO5C,MAAA,aAAa,EAAIC,aAP2B;AAQ5C,MAAA,SAAS,EAAIL,SAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CADJ;AAoBH;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PageHeader from './components/PageHeader'\nimport AddForm from './components/AddForm'\nimport TodoList from './components/TodoList'\nimport LoginForm from './components/LoginForm'\nimport Dashboard from './components/Dashboard'\nimport TodoPage from './components/TodoPage'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n    const [inputText, setInputText] = useState(\"\");\n    const [status, setStatus] = useState(\"all\");\n    const [authorized, setAuthorized] = useState(false);\n    const [todos, setTodos] = useState([]);\n    const [filteredTodos, setFilteredTodos] = useState([]);\n\n    useEffect(() =>{\n        filteredTodosHandler();\n    },[status, todos])\n\n    const filteredTodosHandler = () => {\n        switch(status){\n        case 'completed':\n            setFilteredTodos(todos.filter((todo) => todo.complete === true));\n            break;\n        case 'uncompleted':\n            setFilteredTodos(todos.filter((todo) => todo.complete === false));\n            break;\n        default:\n            setFilteredTodos(todos);\n            break;\n        }\n\n    }\n    return (\n        <Router>\n        <div>\n        <PageHeader />\n        </div>\n        <Dashboard />\n        <Route path=\"/login\" component={() => (<LoginForm setAuthorized={setAuthorized}/>)} />\n        <Route path=\"/todo\" exact component={() => (<TodoPage\n        setInputText = {setInputText}\n        inputText = {inputText}\n        todos = {todos}\n        setTodos = {setTodos}\n        todos = {todos}\n        setTodos = {setTodos}\n        filteredTodos = {filteredTodos}\n        setStatus = {setStatus}/>)} />\n    </Router>\n    )\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}