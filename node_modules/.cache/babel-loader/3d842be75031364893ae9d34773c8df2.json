{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { fetchTodosData, fetchContactsData, setLoginState } from './actions';\nimport axios from 'axios';\nimport { Alert } from 'react';\n\nconst thunkMiddleware = require('redux-thunk').default; //fetching todos from server\n\n\nconst fetchTodos = () => {\n  return function (dispatch) {\n    axios.get('http://localhost:8000/todos').then(response => {\n      dispatch(fetchTodosData(response.data));\n    }).catch(error => {\n      console.log('Unable to fetch todos!');\n    });\n  };\n}; //fetching contacts from server\n\n\nconst fetchContacts = () => {\n  return function (dispatch) {\n    axios.get('http://localhost:8000/contacts').then(response => {\n      dispatch(fetchContactsData(response.data));\n    }).catch(error => {\n      console.log('Unable to fetch contacts!');\n    });\n  };\n};\n\nexport function Login() {\n  return function (dispatch) {\n    axios.post('http://localhost:8000/auth/login', {\n      //          email: email,\n      //          password: password\n      email: 'osama@email.com',\n      password: 'osama'\n    }).then(response => {\n      dispatch(setLoginState(response.data.authorized));\n    }).catch(error => {\n      Alert.alert('Login Failed', 'Email or Password is incorrect');\n    });\n  };\n}\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.dispatch(fetchTodos());\nstore.dispatch(fetchContacts());\nexport default store;","map":{"version":3,"sources":["/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/redux/store.js"],"names":["createStore","applyMiddleware","reducer","fetchTodosData","fetchContactsData","setLoginState","axios","Alert","thunkMiddleware","require","default","fetchTodos","dispatch","get","then","response","data","catch","error","console","log","fetchContacts","Login","post","email","password","authorized","alert","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,EAA4CC,aAA5C,QAAiE,WAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,eAAe,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA/C,C,CAEA;;;AACA,MAAMC,UAAU,GAAG,MAAM;AACrB,SAAO,UAASC,QAAT,EAAkB;AACzBN,IAAAA,KAAK,CAACO,GAAN,CAAU,6BAAV,EACCC,IADD,CACMC,QAAQ,IAAG;AACbH,MAAAA,QAAQ,CAACT,cAAc,CAACY,QAAQ,CAACC,IAAV,CAAf,CAAR;AACH,KAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KAND;AAQC,GATD;AAUH,CAXD,C,CAaA;;;AACA,MAAMC,aAAa,GAAG,MAAM;AACxB,SAAO,UAAST,QAAT,EAAkB;AACzBN,IAAAA,KAAK,CAACO,GAAN,CAAU,gCAAV,EACCC,IADD,CACMC,QAAQ,IAAG;AACbH,MAAAA,QAAQ,CAACR,iBAAiB,CAACW,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACH,KAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,KAND;AAQC,GATD;AAUH,CAXD;;AAaA,OAAO,SAASE,KAAT,GAAgB;AACnB,SAAO,UAASV,QAAT,EAAkB;AACzBN,IAAAA,KAAK,CAACiB,IAAN,CAAW,kCAAX,EACI;AACR;AACA;AACYC,MAAAA,KAAK,EAAE,iBAHX;AAIIC,MAAAA,QAAQ,EAAE;AAJd,KADJ,EAOKX,IAPL,CAOUC,QAAQ,IAAG;AACbH,MAAAA,QAAQ,CAACP,aAAa,CAACU,QAAQ,CAACC,IAAT,CAAcU,UAAf,CAAd,CAAR;AACH,KATL,EAUKT,KAVL,CAUWC,KAAK,IAAG;AACXX,MAAAA,KAAK,CAACoB,KAAN,CAAY,cAAZ,EAA4B,gCAA5B;AACH,KAZL;AAaC,GAdD;AAeH;AAID,MAAMC,KAAK,GAAG5B,WAAW,CAACE,OAAD,EAAUD,eAAe,CAACO,eAAD,CAAzB,CAAzB;AACAoB,KAAK,CAAChB,QAAN,CAAeD,UAAU,EAAzB;AACAiB,KAAK,CAAChB,QAAN,CAAeS,aAAa,EAA5B;AAEA,eAAeO,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { fetchTodosData, fetchContactsData, setLoginState } from './actions'\nimport axios from 'axios';\nimport { Alert } from 'react'\n\nconst thunkMiddleware = require('redux-thunk').default\n\n//fetching todos from server\nconst fetchTodos = () => {\n    return function(dispatch){\n    axios.get('http://localhost:8000/todos')\n    .then(response =>{\n        dispatch(fetchTodosData(response.data))\n    })\n    .catch(error => {\n        console.log('Unable to fetch todos!')\n    })\n\n    }\n}\n\n//fetching contacts from server\nconst fetchContacts = () => {\n    return function(dispatch){\n    axios.get('http://localhost:8000/contacts')\n    .then(response =>{\n        dispatch(fetchContactsData(response.data))\n    })\n    .catch(error => {\n        console.log('Unable to fetch contacts!')\n    })\n\n    }\n}\n\nexport function Login(){\n    return function(dispatch){\n    axios.post('http://localhost:8000/auth/login',\n        {\n//          email: email,\n//          password: password\n            email: 'osama@email.com',\n            password: 'osama'\n        })\n        .then(response =>{\n            dispatch(setLoginState(response.data.authorized))\n        })\n        .catch(error =>{\n            Alert.alert('Login Failed', 'Email or Password is incorrect');\n        });\n    }\n}\n\n\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.dispatch(fetchTodos())\nstore.dispatch(fetchContacts())\n\nexport default store;"]},"metadata":{},"sourceType":"module"}