{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { fetchTodosData } from './actions';\nimport axios from 'axios';\n\nconst thunkMiddleware = require('redux-thunk').default;\n\nconst fetchTodos = () => {\n  return function (dispatch) {\n    axios.get('http://localhost:8000/todos').then(response => {\n      console.log;\n      dispatch(fetchTodosData);\n    }).catch(error => {\n      console.log('Unable to fetch todos!');\n    });\n  };\n};\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.dispatch(fetchTodos());\nexport default store;","map":{"version":3,"sources":["/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/redux/store.js"],"names":["createStore","applyMiddleware","reducer","fetchTodosData","axios","thunkMiddleware","require","default","fetchTodos","dispatch","get","then","response","console","log","catch","error","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA/C;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,SAAO,UAASC,QAAT,EAAkB;AACzBL,IAAAA,KAAK,CAACM,GAAN,CAAU,6BAAV,EACCC,IADD,CACMC,QAAQ,IAAG;AACbC,MAAAA,OAAO,CAACC,GAAR;AACAL,MAAAA,QAAQ,CAACN,cAAD,CAAR;AACH,KAJD,EAKCY,KALD,CAKOC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KAPD;AASC,GAVD;AAWH,CAZD;;AAcA,MAAMG,KAAK,GAAGjB,WAAW,CAACE,OAAD,EAAUD,eAAe,CAACI,eAAD,CAAzB,CAAzB;AACAY,KAAK,CAACR,QAAN,CAAeD,UAAU,EAAzB;AAGA,eAAeS,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { fetchTodosData } from './actions'\nimport axios from 'axios';\n\nconst thunkMiddleware = require('redux-thunk').default\n\nconst fetchTodos = () => {\n    return function(dispatch){\n    axios.get('http://localhost:8000/todos')\n    .then(response =>{\n        console.log\n        dispatch(fetchTodosData)\n    })\n    .catch(error => {\n        console.log('Unable to fetch todos!')\n    })\n\n    }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.dispatch(fetchTodos())\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}