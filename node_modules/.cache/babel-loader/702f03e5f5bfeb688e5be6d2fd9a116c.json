{"ast":null,"code":"import axios from 'axios';\nlet TODO_ID = 0;\nvar initial_state = {\n  \"authorized\": false,\n  \"todos\": [],\n  \"contacts\": []\n};\n\nfunction LoginCall(email, password) {\n  axios.post('http://localhost:8000/auth/login', {\n    email: email,\n    password: password\n  }).then(res => {\n    return res.data.authorized;\n  }).catch(error => {\n    return false;\n  });\n}\n\nexport default function reducer(state = initial_state, action) {\n  if (action.type === 'fetchTodoData') {\n    return { ...state,\n      todos: action.payload.todos\n    };\n  } else if (action.type === 'fetchContactsData') {\n    return { ...state,\n      contacts: action.payload.contacts\n    };\n  } else if (action.type === 'login') {\n    return { ...state,\n      authorized: loginCall(action.payload.email, action.payload.password)\n    };\n  } else if (action.type === 'addTodos') {\n    return { ...state,\n      todos: [...state.todos, {\n        text: action.payload.text,\n        complete: false,\n        id: ++TODO_ID\n      }]\n    };\n  } else if (action.type === 'completeTodos') {\n    return { ...state,\n      todos: state.todos.map(item => {\n        if (item.id === action.payload.id) {\n          return { ...item,\n            complete: !item.complete\n          };\n        }\n\n        return item;\n      })\n    };\n  } else if (action.type === 'deleteTodo') {\n    return { ...state,\n      todos: state.todos.filter(item => item.id !== action.payload.id)\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/redux/reducer.js"],"names":["axios","TODO_ID","initial_state","LoginCall","email","password","post","then","res","data","authorized","catch","error","reducer","state","action","type","todos","payload","contacts","loginCall","text","complete","id","map","item","filter"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAO,GAAC,CAAZ;AAEA,IAAIC,aAAa,GAAG;AACA,gBAAc,KADd;AAEA,WAAS,EAFT;AAGA,cAAY;AAHZ,CAApB;;AAKA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAmC;AAC/BL,EAAAA,KAAK,CAACM,IAAN,CAAW,kCAAX,EACI;AACEF,IAAAA,KAAK,EAAEA,KADT;AAEEC,IAAAA,QAAQ,EAAEA;AAFZ,GADJ,EAIOE,IAJP,CAIYC,GAAG,IAAG;AACV,WAAOA,GAAG,CAACC,IAAJ,CAASC,UAAhB;AACH,GANL,EAOKC,KAPL,CAOWC,KAAK,IAAG;AACX,WAAO,KAAP;AACH,GATL;AAUH;;AAED,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGZ,aAAzB,EAAwCa,MAAxC,EAA+C;AAC1D,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAmC;AAC/B,WAAO,EACH,GAAGF,KADA;AAEHG,MAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD;AAFnB,KAAP;AAIH,GALD,MAMK,IAAGF,MAAM,CAACC,IAAP,KAAgB,mBAAnB,EAAuC;AACxC,WAAO,EACH,GAAGF,KADA;AAEHK,MAAAA,QAAQ,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AAFtB,KAAP;AAIH,GALI,MAMA,IAAGJ,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA2B;AAC5B,WAAO,EACK,GAAGF,KADR;AAEKJ,MAAAA,UAAU,EAAEU,SAAS,CAACL,MAAM,CAACG,OAAP,CAAed,KAAhB,EAAsBW,MAAM,CAACG,OAAP,CAAeb,QAArC;AAF1B,KAAP;AAIH,GALI,MAMA,IAAGU,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC/B,WAAO,EACH,GAAGF,KADA;AAEHG,MAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB;AAACI,QAAAA,IAAI,EAAEN,MAAM,CAACG,OAAP,CAAeG,IAAtB;AAA4BC,QAAAA,QAAQ,EAAE,KAAtC;AAA6CC,QAAAA,EAAE,EAAE,EAAEtB;AAAnD,OAAjB;AAFJ,KAAP;AAIH,GALI,MAMA,IAAGc,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAmC;AACpC,WAAO,EACC,GAAGF,KADJ;AAECG,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYO,GAAZ,CAAiBC,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACF,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAA/B,EACA;AACI,iBAAO,EACP,GAAGE,IADI;AACEH,YAAAA,QAAQ,EAAE,CAACG,IAAI,CAACH;AADlB,WAAP;AAIH;;AACD,eAAOG,IAAP;AACH,OATU;AAFR,KAAP;AAaH,GAdI,MAeA,IAAIV,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAClC,WAAO,EACP,GAAGF,KADI;AAEPG,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYS,MAAZ,CAAmBD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAAtD;AAFA,KAAP;AAIH;;AACD,SAAOT,KAAP;AACH","sourcesContent":["import axios from 'axios';\n\nlet TODO_ID=0;\n\nvar initial_state = {\n                    \"authorized\": false,\n                    \"todos\": [],\n                    \"contacts\": []\n}\nfunction LoginCall(email, password){\n    axios.post('http://localhost:8000/auth/login',\n        {\n          email: email,\n          password: password\n        }).then(res =>{\n            return res.data.authorized;\n        })\n        .catch(error =>{\n            return false;\n        });\n}\n\nexport default function reducer(state = initial_state, action){\n    if(action.type === 'fetchTodoData'){\n        return {\n            ...state,\n            todos: action.payload.todos\n        };\n    }\n    else if(action.type === 'fetchContactsData'){\n        return {\n            ...state,\n            contacts: action.payload.contacts\n        };\n    }\n    else if(action.type === 'login'){\n        return {\n                    ...state,\n                    authorized: loginCall(action.payload.email,action.payload.password)\n                };\n    }\n    else if(action.type === 'addTodos'){\n        return {\n            ...state,\n            todos: [...state.todos, {text: action.payload.text, complete: false, id: ++TODO_ID}]\n        };\n    }\n    else if(action.type === 'completeTodos'){\n        return {\n                ...state,\n                todos: state.todos.map((item) => {\n                if (item.id === action.payload.id)\n                {\n                    return {\n                    ...item, complete: !item.complete,\n                    };\n\n                }\n                return item;\n            })\n            };\n    }\n    else if (action.type === 'deleteTodo'){\n        return {\n        ...state,\n        todos: state.todos.filter(item => item.id !== action.payload.id)\n        };\n    }\n    return state;\n}\n"]},"metadata":{},"sourceType":"module"}