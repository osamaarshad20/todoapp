{"ast":null,"code":"var _jsxFileName = \"/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PageHeader from './components/PageHeader';\nimport AddForm from './components/AddForm';\nimport TodoList from './components/TodoList';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\nimport TodoPage from './components/TodoPage';\nimport ContactsPage from './components/ContactsPage';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from './redux/store';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [authorized, setAuthorized] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [contacts, setContacts] = useState([{\n    \"id\": 1,\n    \"name\": \"contact-1\",\n    \"number\": \"+92 3-- 21-----\"\n  }]);\n  useEffect(() => {\n    filteredTodosHandler();\n  }, [status, todos]);\n\n  const filteredTodosHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.complete === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.complete === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  console.log(store.getStore());\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \" Testing\");\n\n  if (!store.getStore().authorized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Dashboard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/App.js"],"names":["React","useState","useEffect","PageHeader","AddForm","TodoList","LoginForm","Dashboard","TodoPage","ContactsPage","BrowserRouter","Router","Route","Switch","store","App","inputText","setInputText","status","setStatus","authorized","setAuthorized","todos","setTodos","filteredTodos","setFilteredTodos","contacts","setContacts","filteredTodosHandler","filter","todo","complete","console","log","getStore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAIA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,CACzC;AAAC,UAAK,CAAN;AAAS,YAAO,WAAhB;AAA6B,cAAU;AAAvC,GADyC,CAAD,CAAxC;AAIAC,EAAAA,SAAS,CAAC,MAAK;AACX0B,IAAAA,oBAAoB;AACvB,GAFQ,EAEP,CAACV,MAAD,EAASI,KAAT,CAFO,CAAT;;AAIA,QAAMM,oBAAoB,GAAG,MAAM;AAC/B,YAAOV,MAAP;AACA,WAAK,WAAL;AACIO,QAAAA,gBAAgB,CAACH,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,IAAzC,CAAD,CAAhB;AACA;;AACJ,WAAK,aAAL;AACIN,QAAAA,gBAAgB,CAACH,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,KAAzC,CAAD,CAAhB;AACA;;AACJ;AACIN,QAAAA,gBAAgB,CAACH,KAAD,CAAhB;AACA;AATJ;AAYH,GAbD;;AAcAU,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACoB,QAAN,EAAZ;AACA,sBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR;;AAGA,MAAI,CAACpB,KAAK,CAACoB,QAAN,GAAiBd,UAAtB,EAAiC;AAC7B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND,MAOI;AACA,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,eAKA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADJ;AAUH;AAGJ;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PageHeader from './components/PageHeader'\nimport AddForm from './components/AddForm'\nimport TodoList from './components/TodoList'\nimport LoginForm from './components/LoginForm'\nimport Dashboard from './components/Dashboard'\nimport TodoPage from './components/TodoPage'\nimport ContactsPage from './components/ContactsPage'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from './redux/store'\n\n\n\nfunction App() {\n    const [inputText, setInputText] = useState(\"\");\n    const [status, setStatus] = useState(\"all\");\n    const [authorized, setAuthorized] = useState(false);\n    const [todos, setTodos] = useState([]);\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    const [contacts, setContacts] = useState([\n    {\"id\":1, \"name\":\"contact-1\", \"number\": \"+92 3-- 21-----\"}\n    ])\n\n    useEffect(() =>{\n        filteredTodosHandler();\n    },[status, todos])\n\n    const filteredTodosHandler = () => {\n        switch(status){\n        case 'completed':\n            setFilteredTodos(todos.filter((todo) => todo.complete === true));\n            break;\n        case 'uncompleted':\n            setFilteredTodos(todos.filter((todo) => todo.complete === false));\n            break;\n        default:\n            setFilteredTodos(todos);\n            break;\n        }\n\n    }\n    console.log(store.getStore())\n    return (\n            <h1> Testing</h1>\n    )\n    if (!store.getStore().authorized){\n        return (\n            <div>\n                <PageHeader />\n            </div>\n        )\n    }\n    else{\n        return (\n            <Router>\n            <div>\n                <PageHeader />\n                <hr />\n            </div>\n            <Dashboard />\n\n        </Router>\n        )\n    }\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}