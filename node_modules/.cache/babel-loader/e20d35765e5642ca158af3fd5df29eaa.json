{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { fetchTodosData, fetchContactsData, setLoginState, deleteTodoAction } from './actions';\nimport axios from 'axios';\nimport { Alert } from 'react';\n\nconst thunkMiddleware = require('redux-thunk').default;\n\nlet TODO_ID = 0; //fetching todos from server\n\nconst fetchTodos = () => {\n  return function (dispatch) {\n    axios.get('http://localhost:8000/todos').then(response => {\n      dispatch(fetchTodosData(response.data));\n    }).catch(error => {\n      console.log('Unable to fetch todos!');\n    });\n  };\n}; //fetching contacts from server\n\n\nconst fetchContacts = () => {\n  return function (dispatch) {\n    axios.get('http://localhost:8000/contacts').then(response => {\n      dispatch(fetchContactsData(response.data));\n    }).catch(error => {\n      console.log('Unable to fetch contacts!');\n    });\n  };\n};\n\nexport function Login(email, password) {\n  return function (dispatch) {\n    axios.post('http://localhost:8000/auth/login', {\n      email: email,\n      password: password\n    }).then(response => {\n      dispatch(setLoginState(response.data.authorized));\n    }).catch(error => {\n      Alert.alert('Login Failed', 'Email or Password is incorrect');\n    });\n  };\n}\nexport function deleteTodo(id) {\n  return function (dispatch) {\n    axios.delete('http://localhost:8000/todos/' + id).then(response => {\n      dispatch(deleteTodoAction(id));\n    }).catch(error => {\n      Alert.alert('Unable to delete!');\n    });\n  };\n}\nexport function addTodo(desc) {\n  return function (dispatch) {\n    axios.post('http://localhost:8000/todos', {\n      'id': ++TODO_ID,\n      'text': desc,\n      'complete': false\n    }).then(response => {\n      dispatch(addTodoAction({\n        'id': TODO_ID,\n        'text': desc,\n        'complete': false\n      }));\n    }).catch(error => {\n      Alert.alert('Unable to delete!');\n    });\n  };\n}\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.dispatch(fetchTodos());\nstore.dispatch(fetchContacts());","map":{"version":3,"sources":["/home/osamaarshad/Desktop/office-work/js_training/todo-app/src/redux/store.js"],"names":["createStore","applyMiddleware","reducer","fetchTodosData","fetchContactsData","setLoginState","deleteTodoAction","axios","Alert","thunkMiddleware","require","default","TODO_ID","fetchTodos","dispatch","get","then","response","data","catch","error","console","log","fetchContacts","Login","email","password","post","authorized","alert","deleteTodo","id","delete","addTodo","desc","addTodoAction","store"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport { fetchTodosData, fetchContactsData, setLoginState, deleteTodoAction } from './actions'\nimport axios from 'axios';\nimport { Alert } from 'react'\n\nconst thunkMiddleware = require('redux-thunk').default\n\nlet TODO_ID=0;\n\n//fetching todos from server\nconst fetchTodos = () => {\n    return function(dispatch){\n    axios.get('http://localhost:8000/todos')\n    .then(response =>{\n        dispatch(fetchTodosData(response.data))\n    })\n    .catch(error => {\n        console.log('Unable to fetch todos!')\n    })\n\n    }\n}\n\n//fetching contacts from server\nconst fetchContacts = () => {\n    return function(dispatch){\n    axios.get('http://localhost:8000/contacts')\n    .then(response =>{\n        dispatch(fetchContactsData(response.data))\n    })\n    .catch(error => {\n        console.log('Unable to fetch contacts!')\n    })\n\n    }\n}\n\nexport function Login(email,password){\n    return function(dispatch){\n    axios.post('http://localhost:8000/auth/login',\n        {\n            email: email,\n            password: password\n        })\n        .then(response =>{\n            dispatch(setLoginState(response.data.authorized))\n        })\n        .catch(error =>{\n            Alert.alert('Login Failed', 'Email or Password is incorrect');\n        });\n    }\n}\n\nexport function deleteTodo(id){\n    return function(dispatch){\n    axios.delete('http://localhost:8000/todos/'+id)\n        .then(response =>{\n            dispatch(deleteTodoAction(id))\n        })\n        .catch(error =>{\n            Alert.alert('Unable to delete!');\n        });\n    }\n}\n\nexport function addTodo(desc){\n    return function(dispatch){\n    axios.post('http://localhost:8000/todos',{\n        'id': ++TODO_ID,\n        'text': desc,\n        'complete': false\n        })\n        .then(response =>{\n            dispatch(addTodoAction({\n        'id': TODO_ID,\n        'text': desc,\n        'complete': false\n        }))\n        })\n        .catch(error =>{\n            Alert.alert('Unable to delete!');\n        });\n    }\n}\n\n\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.dispatch(fetchTodos())\nstore.dispatch(fetchContacts())\n"]},"metadata":{},"sourceType":"module"}